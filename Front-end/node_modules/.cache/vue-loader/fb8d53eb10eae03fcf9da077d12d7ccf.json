{"remainingRequest":"C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\src\\views\\results\\result16.vue?vue&type=template&id=49f21b95&","dependencies":[{"path":"C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\src\\views\\results\\result16.vue","mtime":1629980970100},{"path":"C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\USER\\Desktop\\종민\\YBIGTA\\팀프로젝트\\Front-end\\question\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}